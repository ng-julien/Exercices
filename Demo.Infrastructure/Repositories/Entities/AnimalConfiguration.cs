// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Demo.Infrastructure.Repositories.Entities
{

    // Animal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    internal class AnimalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Animal>
    {
        public AnimalConfiguration()
            : this("dbo")
        {
        }

        public AnimalConfiguration(string schema)
        {
            ToTable("Animal", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Legs).HasColumnName(@"Legs").HasColumnType("int").IsRequired();
            Property(x => x.FamilyId).HasColumnName(@"FamilyId").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Family).WithMany(b => b.Animals).HasForeignKey(c => c.FamilyId).WillCascadeOnDelete(false); // FK_Animal_Family
            HasMany(t => t.Foods).WithMany(t => t.Animals).Map(m =>
            {
                m.ToTable("AnimalEats", "dbo");
                m.MapLeftKey("AnimalId");
                m.MapRightKey("FoodId");
            });
        }
    }

}
// </auto-generated>
